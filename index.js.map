{"version":3,"file":"index.js","sources":["arithmetics.js","index.ts"],"sourcesContent":["global.parser = \n\n\n/*\n * Generated by PEG.js 0.10.0.\n *\n * http://pegjs.org/\n */\n(function() {\n  \"use strict\";\n\n  function peg$subclass(child, parent) {\n    function ctor() { this.constructor = child; }\n    ctor.prototype = parent.prototype;\n    child.prototype = new ctor();\n  }\n\n  function peg$SyntaxError(message, expected, found, location) {\n    this.message  = message;\n    this.expected = expected;\n    this.found    = found;\n    this.location = location;\n    this.name     = \"SyntaxError\";\n\n    if (typeof Error.captureStackTrace === \"function\") {\n      Error.captureStackTrace(this, peg$SyntaxError);\n    }\n  }\n\n  peg$subclass(peg$SyntaxError, Error);\n\n  peg$SyntaxError.buildMessage = function(expected, found) {\n    var DESCRIBE_EXPECTATION_FNS = {\n          literal: function(expectation) {\n            return \"\\\"\" + literalEscape(expectation.text) + \"\\\"\";\n          },\n\n          \"class\": function(expectation) {\n            var escapedParts = \"\",\n                i;\n\n            for (i = 0; i < expectation.parts.length; i++) {\n              escapedParts += expectation.parts[i] instanceof Array\n                ? classEscape(expectation.parts[i][0]) + \"-\" + classEscape(expectation.parts[i][1])\n                : classEscape(expectation.parts[i]);\n            }\n\n            return \"[\" + (expectation.inverted ? \"^\" : \"\") + escapedParts + \"]\";\n          },\n\n          any: function(expectation) {\n            return \"any character\";\n          },\n\n          end: function(expectation) {\n            return \"end of input\";\n          },\n\n          other: function(expectation) {\n            return expectation.description;\n          }\n        };\n\n    function hex(ch) {\n      return ch.charCodeAt(0).toString(16).toUpperCase();\n    }\n\n    function literalEscape(s) {\n      return s\n        .replace(/\\\\/g, '\\\\\\\\')\n        .replace(/\"/g,  '\\\\\"')\n        .replace(/\\0/g, '\\\\0')\n        .replace(/\\t/g, '\\\\t')\n        .replace(/\\n/g, '\\\\n')\n        .replace(/\\r/g, '\\\\r')\n        .replace(/[\\x00-\\x0F]/g,          function(ch) { return '\\\\x0' + hex(ch); })\n        .replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function(ch) { return '\\\\x'  + hex(ch); });\n    }\n\n    function classEscape(s) {\n      return s\n        .replace(/\\\\/g, '\\\\\\\\')\n        .replace(/\\]/g, '\\\\]')\n        .replace(/\\^/g, '\\\\^')\n        .replace(/-/g,  '\\\\-')\n        .replace(/\\0/g, '\\\\0')\n        .replace(/\\t/g, '\\\\t')\n        .replace(/\\n/g, '\\\\n')\n        .replace(/\\r/g, '\\\\r')\n        .replace(/[\\x00-\\x0F]/g,          function(ch) { return '\\\\x0' + hex(ch); })\n        .replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function(ch) { return '\\\\x'  + hex(ch); });\n    }\n\n    function describeExpectation(expectation) {\n      return DESCRIBE_EXPECTATION_FNS[expectation.type](expectation);\n    }\n\n    function describeExpected(expected) {\n      var descriptions = new Array(expected.length),\n          i, j;\n\n      for (i = 0; i < expected.length; i++) {\n        descriptions[i] = describeExpectation(expected[i]);\n      }\n\n      descriptions.sort();\n\n      if (descriptions.length > 0) {\n        for (i = 1, j = 1; i < descriptions.length; i++) {\n          if (descriptions[i - 1] !== descriptions[i]) {\n            descriptions[j] = descriptions[i];\n            j++;\n          }\n        }\n        descriptions.length = j;\n      }\n\n      switch (descriptions.length) {\n        case 1:\n          return descriptions[0];\n\n        case 2:\n          return descriptions[0] + \" or \" + descriptions[1];\n\n        default:\n          return descriptions.slice(0, -1).join(\", \")\n            + \", or \"\n            + descriptions[descriptions.length - 1];\n      }\n    }\n\n    function describeFound(found) {\n      return found ? \"\\\"\" + literalEscape(found) + \"\\\"\" : \"end of input\";\n    }\n\n    return \"Expected \" + describeExpected(expected) + \" but \" + describeFound(found) + \" found.\";\n  };\n\n  function peg$parse(input, options) {\n    options = options !== void 0 ? options : {};\n\n    var peg$FAILED = {},\n\n        peg$startRuleFunctions = { start: peg$parsestart },\n        peg$startRuleFunction  = peg$parsestart,\n\n        peg$c0 = \"+\",\n        peg$c1 = peg$literalExpectation(\"+\", false),\n        peg$c2 = function(left, right) { return left + right; },\n        peg$c3 = \"*\",\n        peg$c4 = peg$literalExpectation(\"*\", false),\n        peg$c5 = function(left, right) { return left * right; },\n        peg$c6 = \"(\",\n        peg$c7 = peg$literalExpectation(\"(\", false),\n        peg$c8 = \")\",\n        peg$c9 = peg$literalExpectation(\")\", false),\n        peg$c10 = function(additive) { return additive; },\n        peg$c11 = peg$otherExpectation(\"integer\"),\n        peg$c12 = /^[0-9]/,\n        peg$c13 = peg$classExpectation([[\"0\", \"9\"]], false, false),\n        peg$c14 = function(digits) { return parseInt(digits.join(\"\"), 10); },\n\n        peg$currPos          = 0,\n        peg$savedPos         = 0,\n        peg$posDetailsCache  = [{ line: 1, column: 1 }],\n        peg$maxFailPos       = 0,\n        peg$maxFailExpected  = [],\n        peg$silentFails      = 0,\n\n        peg$result;\n\n    if (\"startRule\" in options) {\n      if (!(options.startRule in peg$startRuleFunctions)) {\n        throw new Error(\"Can't start parsing from rule \\\"\" + options.startRule + \"\\\".\");\n      }\n\n      peg$startRuleFunction = peg$startRuleFunctions[options.startRule];\n    }\n\n    function text() {\n      return input.substring(peg$savedPos, peg$currPos);\n    }\n\n    function location() {\n      return peg$computeLocation(peg$savedPos, peg$currPos);\n    }\n\n    function expected(description, location) {\n      location = location !== void 0 ? location : peg$computeLocation(peg$savedPos, peg$currPos)\n\n      throw peg$buildStructuredError(\n        [peg$otherExpectation(description)],\n        input.substring(peg$savedPos, peg$currPos),\n        location\n      );\n    }\n\n    function error(message, location) {\n      location = location !== void 0 ? location : peg$computeLocation(peg$savedPos, peg$currPos)\n\n      throw peg$buildSimpleError(message, location);\n    }\n\n    function peg$literalExpectation(text, ignoreCase) {\n      return { type: \"literal\", text: text, ignoreCase: ignoreCase };\n    }\n\n    function peg$classExpectation(parts, inverted, ignoreCase) {\n      return { type: \"class\", parts: parts, inverted: inverted, ignoreCase: ignoreCase };\n    }\n\n    function peg$anyExpectation() {\n      return { type: \"any\" };\n    }\n\n    function peg$endExpectation() {\n      return { type: \"end\" };\n    }\n\n    function peg$otherExpectation(description) {\n      return { type: \"other\", description: description };\n    }\n\n    function peg$computePosDetails(pos) {\n      var details = peg$posDetailsCache[pos], p;\n\n      if (details) {\n        return details;\n      } else {\n        p = pos - 1;\n        while (!peg$posDetailsCache[p]) {\n          p--;\n        }\n\n        details = peg$posDetailsCache[p];\n        details = {\n          line:   details.line,\n          column: details.column\n        };\n\n        while (p < pos) {\n          if (input.charCodeAt(p) === 10) {\n            details.line++;\n            details.column = 1;\n          } else {\n            details.column++;\n          }\n\n          p++;\n        }\n\n        peg$posDetailsCache[pos] = details;\n        return details;\n      }\n    }\n\n    function peg$computeLocation(startPos, endPos) {\n      var startPosDetails = peg$computePosDetails(startPos),\n          endPosDetails   = peg$computePosDetails(endPos);\n\n      return {\n        start: {\n          offset: startPos,\n          line:   startPosDetails.line,\n          column: startPosDetails.column\n        },\n        end: {\n          offset: endPos,\n          line:   endPosDetails.line,\n          column: endPosDetails.column\n        }\n      };\n    }\n\n    function peg$fail(expected) {\n      if (peg$currPos < peg$maxFailPos) { return; }\n\n      if (peg$currPos > peg$maxFailPos) {\n        peg$maxFailPos = peg$currPos;\n        peg$maxFailExpected = [];\n      }\n\n      peg$maxFailExpected.push(expected);\n    }\n\n    function peg$buildSimpleError(message, location) {\n      return new peg$SyntaxError(message, null, null, location);\n    }\n\n    function peg$buildStructuredError(expected, found, location) {\n      return new peg$SyntaxError(\n        peg$SyntaxError.buildMessage(expected, found),\n        expected,\n        found,\n        location\n      );\n    }\n\n    function peg$parsestart() {\n      var s0;\n\n      s0 = peg$parseadditive();\n\n      return s0;\n    }\n\n    function peg$parseadditive() {\n      var s0, s1, s2, s3;\n\n      s0 = peg$currPos;\n      s1 = peg$parsemultiplicative();\n      if (s1 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 43) {\n          s2 = peg$c0;\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c1); }\n        }\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parseadditive();\n          if (s3 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c2(s1, s3);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$parsemultiplicative();\n      }\n\n      return s0;\n    }\n\n    function peg$parsemultiplicative() {\n      var s0, s1, s2, s3;\n\n      s0 = peg$currPos;\n      s1 = peg$parseprimary();\n      if (s1 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 42) {\n          s2 = peg$c3;\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c4); }\n        }\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parsemultiplicative();\n          if (s3 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c5(s1, s3);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$parseprimary();\n      }\n\n      return s0;\n    }\n\n    function peg$parseprimary() {\n      var s0, s1, s2, s3;\n\n      s0 = peg$parseinteger();\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 40) {\n          s1 = peg$c6;\n          peg$currPos++;\n        } else {\n          s1 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c7); }\n        }\n        if (s1 !== peg$FAILED) {\n          s2 = peg$parseadditive();\n          if (s2 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 41) {\n              s3 = peg$c8;\n              peg$currPos++;\n            } else {\n              s3 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c9); }\n            }\n            if (s3 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c10(s2);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      }\n\n      return s0;\n    }\n\n    function peg$parseinteger() {\n      var s0, s1, s2;\n\n      peg$silentFails++;\n      s0 = peg$currPos;\n      s1 = [];\n      if (peg$c12.test(input.charAt(peg$currPos))) {\n        s2 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c13); }\n      }\n      if (s2 !== peg$FAILED) {\n        while (s2 !== peg$FAILED) {\n          s1.push(s2);\n          if (peg$c12.test(input.charAt(peg$currPos))) {\n            s2 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s2 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c13); }\n          }\n        }\n      } else {\n        s1 = peg$FAILED;\n      }\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c14(s1);\n      }\n      s0 = s1;\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c11); }\n      }\n\n      return s0;\n    }\n\n    peg$result = peg$startRuleFunction();\n\n    if (peg$result !== peg$FAILED && peg$currPos === input.length) {\n      return peg$result;\n    } else {\n      if (peg$result !== peg$FAILED && peg$currPos < input.length) {\n        peg$fail(peg$endExpectation());\n      }\n\n      throw peg$buildStructuredError(\n        peg$maxFailExpected,\n        peg$maxFailPos < input.length ? input.charAt(peg$maxFailPos) : null,\n        peg$maxFailPos < input.length\n          ? peg$computeLocation(peg$maxFailPos, peg$maxFailPos + 1)\n          : peg$computeLocation(peg$maxFailPos, peg$maxFailPos)\n      );\n    }\n  }\n\n  return {\n    SyntaxError: peg$SyntaxError,\n    parse:       peg$parse\n  };\n})()","import * as parser from './arithmetics'\nparser;// To avoid rollup's tree shaking\n\ntry {\n    const sampleOutput = global.parser.parse('1+1');\n    console.log(sampleOutput)\n}\ncatch (ex)\n{\n  console.error(ex)\n  // Handle parsing error\n    // [...]\n}"],"names":["global"],"mappings":"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"}